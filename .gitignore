# Rust build artifacts
/target/
**/*.rs.bk
*.pdb

# Cargo
Cargo.lock
# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More info: https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html

# Backup files
*.orig
*.bak
*~

# IDE and Editor directories
.idea/
.vscode/
*.swp
*.swo
*.swn
.DS_Store
*.sublime-workspace
*.sublime-project

# IntelliJ
*.iml
.idea/
out/

# Visual Studio Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# RLS (Rust Language Server)
rls*.log

# Rust-analyzer
rust-project.json

# Debug artifacts
*.dSYM/

# OS specific
.DS_Store
Thumbs.db
desktop.ini

# Environment files
.env
.env.local
.env.*.local

# Test coverage
*.profraw
*.profdata
coverage/
lcov.info

# Documentation
/doc/
!/doc/README.md

# Benchmark results
/benches/results/

# Temporary files
tmp/
temp/
*.tmp

# Log files
*.log
logs/

# Database files (if applicable)
*.db
*.sqlite
*.sqlite3

# Binary executables (uncomment if needed)
# *.exe
# *.dll
# *.so
# *.dylib

# Python cache (if using PyO3 or similar)
__pycache__/
*.py[cod]
*$py.class

# Node modules (if using wasm-pack or similar)
node_modules/
package-lock.json
yarn.lock

# WASM artifacts (if applicable)
pkg/
wasm-pack.log